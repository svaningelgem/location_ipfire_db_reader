[tool.poetry]
name = "location_ipfire_db_reader"
version = "1.0.7"
description = "Easily get the country code from an ip address."
authors = ["Steven Van Ingelgem <steven@vaningelgem.be>"]
license = "MIT"
readme = "README.md"


[tool.poetry.dependencies]
python = ">=3.9"
requests = ">=2"


[tool.poetry.group.dev.dependencies]
ruff = "*"
pytest-cov = "*"
pytest-mock = "*"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"


[tool.poetry.urls]
"Source Code" = "https://github.com/svaningelgem/location_ipfire_db_reader"


[tool.coverage.run]
branch = true

[tool.coverage.report]
exclude_also = [
    "if typing.TYPE_CHECKING:"
]


[tool.ruff]
fix = true

# Same as Black.
line-length = 120

target-version = "py39"

[tool.ruff.lint]
select = [
    "ANN", # flake8-annotations
    "B", # flake8-bugbear
    "C90", # mccabe
    "C4", # flake8-comprehensions
    # "D", # flake8-docstrings
    "D213", # Augment NumPy docstring convention: Multi-line docstring summary should start at the second line
    "D417", # Augment NumPy docstring convention: Missing argument descriptions
    "E", # pycodestyle
    "EM", # flake8-errmsg
    "F", # Pyflakes
    "FA", # flake8-future-annotations
    "FBT001", # flake8-boolean-trap
    "I", # isort
    "PIE", # flake8-pie
    "PT", # flake8-pytest-style
    "PTH", # flake8-use-pathlib
    "RUF", # Ruff-specific rules
    "SIM", # flake8-simplify
    "TCH", # flake8-type-checking
    "TD", # flake8-todos
    "TID", # flake8-tidy-imports
    "TRY", # tryceratops
    "UP", # pyupgrade
    "W", # pycodestyle
]
ignore = [
    "D211",
    "D213",
    "ANN001",  # Missing type annotation for function argument `self`
    "ANN101",  # Missing type annotation for `self` in method
    "ANN102",  # Missing type annotation for `cls` in classmethod
]

# Allow autofix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"
